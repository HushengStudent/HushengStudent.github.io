---
layout: post
title:  "[设计模式]设计模式之迪米特法则"
date:   2016-09-17 02:49:10
categories: 设计模式
comments: true
---

如果两个类不必彼此直接通信，那么这两个类就不应当发生直接的相互作用。如果其中的一个类需要调用另一个类的某一个方法的话，可以通过第三者转发这个调用。

类与类之间的关系越密切，耦合度越大，当一个类发生改变时，对另一个类的影响也越大。

1、在类的划分上，应当尽量创建松耦合的类，类之间的耦合度越低，就越有利于复用，一个处在松耦合中的类一旦被修改，不会对关联的类造成太大波及。

2、在类的结构设计上，每一个类都应当尽量降低其成员变量和成员函数的访问权限。

3、在类的设计上，只要有可能，一个类型应当设计成不变类。

4、在对其他类的引用上，一个对象对其他对象的引用应当降到最低。

在采用迪米特法则时要反复权衡，既做到结构清晰，又要高内聚低耦合。