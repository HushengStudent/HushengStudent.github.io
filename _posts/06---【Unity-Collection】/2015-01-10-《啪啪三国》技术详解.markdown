---
layout: post
title:  "[转载]《啪啪三国》技术详解"
date:   2015-01-10 10:10:10
categories: 06---【Unity-Collection】
comments: true
---

#### 1、引擎程序员

说到Unity3D我这里有一个引擎程序员的说法，他要懂3D引擎。你怎么判断这个引擎程序员合格不合格呢？你问他看什么书？他如果说我在看《21天学会Unity3D》这是无法做引擎程序员的。这是一个引擎程序员的书架，看过哪些书呢？《游戏编程精粹》，《GPU精粹》系列，《ShaderX》系列等，哪怕你出去找工作，你跟老板谈我读过这个，也至少看上去象个样，即使没看过，至少眼界得开阔，Unity3D之所以用不好，因为有这么多书要看。如果说你经常上Unity3D学院的网站，这个是不管用的。所以说只看《21天学会Unity3D》是学不会Unity3D的。

引擎程序员我讲讲核心的要点，他首先是要了解3D引擎工作的原理，优化起来有的放矢，出了问题才知道如何救火。如果你开始没有把握好项目的标准的话，一不小心就跳进大坑。这一块做不好的话最要命的是我，比如人物做了50套，如果一旦不行，你们推倒重来，那你这个美术资源就打水漂了。真正找到靠谱的Unity3D的人，那就是“妈妈再也不用担心我用Unity3D做手游了。”

一句话证明你用过Unity3D

普通群众的评价是：Unity3D坑真多。专家会说？创业团队用Unity3D做手游必死。

讲到这儿我想大部分的人就是想听听Unity3D有什么坑。

Unity3D的坑我觉得最严重的坑就是没有懂3D的程序员，把Unity当成Office用。

Unity发展这么多年，已经是很强的引擎了。我就摘出来说一说我们遇到的坑，有点不是特别好用，就是第5条，它有一个多人协作的Asset Server偶尔会有时候不靠谱，我们现在改用SVN来做版本管理。然后有一个坑，就是很多团队很少进行真机测试，屌丝开发商可能连iphone都没有，一旦测试发现游戏根本跑不动。还有就是第10条，在IOS下无法更新C#代码，更新就下100M这不是Unity的错，是IOS的错。我们做《啪啪三国》的时候也是不知道IOS的限制，负责当初应该规划一下做成脚本更新。最后简单说一句，因为现在Windows phone也很热了，要做WP的有要尽早测试。经鉴定Unity是群众喜闻乐见、发家致富的好引擎。

然后是经验分享，“绝密”，我们是怎么做《啪啪三国》的。说之前，我表达一下我对我们两个创业合伙人的感谢，这些都是绝密，一般人是不轻易说的。现在Unity大家用起来是有一定的门槛，但是也许三个月也许半年后，大家熟悉这些工具以后，们团队的价值就体现出来了。我们程序员就是做好后勤。

#### 2、效率优化

然后讲我们效率优化的一般方法。当然我们讲这些方法其实建立在一个方法上，就是你熟读我前面的50本书你就融会贯通了，我说什么你就一目了然了。

第一个排除法，怀疑哪里就屏掉哪里。这是最基础的一个方法，也是最有效的。

第二个就是用数据说话，善用Unity4强大的Profiler工具，我现在感觉有点水平的程序员，依靠Unity4强大的Profiler工具，没有理由做不出一个跑不起来的游戏，因为这里面设计的性能分析和统计是相当详细和相当有作用的，它可以统计你CPU的占用率，又可以统计你每个模块、每个函数，每个执行的时间。还有一个就是说CPU的效益，然后我们知道还有显卡，还有GPU，GPU就是它有一个很直观的图，你渲染了多少三角面。内行人一看就知道了。

最后再强调一点就是真机制测试，经常发布到手机上跑跑，如果是屌丝团队，你没有IPhone手机的话还是赶紧买吧。

优化1：

说说我们的方法，draw call太高怎么解决。


3D渲染东西，一个人和一百个人是不一样的。你一百个人就要渲染一百次，怎么讲呢？想让效率提高的话，最优先的办法就是看draw call高不高，高的话就降低一下。最快的渲染，就是不渲染。这块就涉及到我们在这个屋子里，屋子外面是看不见的，但是计算机是可以看到的，你就不要渲染出来，或者是我背后有谁，如果有两个人我就把它删掉。还有土办法就是手动配置可见范围列表。

然后第二个就是物体太多，可以考虑将多个物体合成一个，这个可以由美术来做，也可以由程序来做。我原来是一片树林，起码有20多棵树，我们让美术合并一下，把这20多个树合并成一个物体，看起来是一个树林，另外一个就是让程序来做的，你看我们战场西面，因为我们有攻兵，一个队伍有30多人一人射一支箭这就就要300多个，就让程序把所有的动态合并成三个。包括影子，就是动态合并所有的影子。

优化2

理解所使用Material的实现原理，不滥用Material。前面有人讲过，Unity跟玩游戏一样的，你发现后面跑不动了，就要有一个明白人给你做一个规划，你有没有这样的效果，如果有的话你要怎么实现。我们用什么样的Shader，是不是还有高低配。给大家看一下，左边这个小菜单是我们自己写的部分材质的效果，上面也是包括人物和效果。

第三个优化方面，就是模型面数太多。

这个从显卡上看是一个人，但是它其实是由三角形组成的。比如说你的人物三角面形特别多？那怎么办？就减。渲染很多兵的时候我们就用右边的这个没腿的，其实做游戏，游戏视觉就是蒙人。

#### 3、工具化

#### 4、插件库


接下来就是一个插件/库，这是我们用到的第三方的东西，一个是NGUI，这是Unity做UI比较靠谱的，也是没得选择的选择。

第二个和第三个就是Protobuf，这是我们用于客户端和服务器之间传递消息包的一个库，这个库不错比较稳定，的是一个国外吃饱了撑的程序员做的，它支持很多的平台，像安卓、IOS等都有。

接下来是UnityVs，这个东西是Unity代码调试的插件，这个用起来不错，可以远离Unity本身提供的MONO工具。

最后一个是Prime Storekit，这个是搞定正版苹果的支付。你买了之后你这个苹果有多少坑就一一而过了。

我这块的建议就是慎用第三方代码库，可能会给跨平台发布带来麻烦。
